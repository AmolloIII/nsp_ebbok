igad <- c("Djibouti", "Eritrea", "Ethiopia", "Kenya", "Somalia", "South Sudan", "Sudan", "Uganda")
eac <- c("Burundi", "Democratic Republic of the Congo", "Kenya", "Rwanda",
"South Sudan", "Tanzania", "Uganda")
# Filter and label each group
comesa_sf <- world %>% filter(admin %in% comesa) %>% mutate(Group = "COMESA")
igad_sf   <- world %>% filter(admin %in% igad)   %>% mutate(Group = "IGAD")
eac_sf    <- world %>% filter(admin %in% eac)    %>% mutate(Group = "EAC")
# Combine all groups
regional_bloks <- bind_rows(comesa_sf, igad_sf, eac_sf)
# Optional: Remove duplicates (e.g., countries in more than one bloc)
regional_bloks <- regional_bloks %>%
group_by(admin) %>%
slice(1) %>%
ungroup()
# Visualize
mapview(regional_bloks, zcol = "Group", layer.name = "Regional Blocs")
# Load required packages
library(sf)
library(mapview)
library(rnaturalearth)
library(rnaturalearthdata)
library(dplyr)
# Load world countries
world <- ne_countries(scale = "medium", returnclass = "sf")
# Define countries in each regional bloc
comesa <- c("Burundi", "Comoros", "Democratic Republic of the Congo", "Djibouti", "Egypt",
"Eritrea", "Eswatini", "Ethiopia", "Kenya", "Libya", "Madagascar", "Malawi",
"Mauritius", "Rwanda", "Seychelles", "Somalia", "Sudan", "Tunisia", "Uganda",
"Zambia", "Zimbabwe")
igad <- c("Djibouti", "Eritrea", "Ethiopia", "Kenya", "Somalia", "South Sudan", "Sudan", "Uganda")
eac <- c("Burundi", "Democratic Republic of the Congo", "Kenya", "Rwanda",
"South Sudan", "Tanzania", "Uganda")
# Filter and label each as separate sf objects
comesa_sf <- world %>% filter(admin %in% comesa)
igad_sf   <- world %>% filter(admin %in% igad)
eac_sf    <- world %>% filter(admin %in% eac)
# Assign distinct colors automatically using mapview
m1 <- mapview(comesa_sf, zcol = "admin", layer.name = "COMESA", alpha.regions = 0.6)
m2 <- mapview(igad_sf,   zcol = "admin", layer.name = "IGAD",   alpha.regions = 0.6)
m3 <- mapview(eac_sf,    zcol = "admin", layer.name = "EAC",    alpha.regions = 0.6)
# Combine as toggleable layers
m1 + m2 + m3
# Assign distinct colors automatically using mapview
m1 <- mapview(comesa_sf, layer.name = "COMESA", alpha.regions = 0.6)
m2 <- mapview(igad_sf, layer.name = "IGAD",   alpha.regions = 0.6)
m3 <- mapview(eac_sf, layer.name = "EAC",    alpha.regions = 0.6)
# Combine as toggleable layers
m1 + m2 + m3
# Combine as toggleable layers
m0 + m1 + m2 + m3
# Assign distinct colors automatically using mapview
m0 <- mapview(africa, layer.name = "African Countries")
m1 <- mapview(comesa_sf, layer.name = "COMESA", alpha.regions = 0.6)
m2 <- mapview(igad_sf, layer.name = "IGAD",   alpha.regions = 0.6)
m3 <- mapview(eac_sf, layer.name = "EAC",    alpha.regions = 0.6)
# Combine as toggleable layers
m0 + m1 + m2 + m3
# Base layer: All of Africa in grey
m0 <- mapview(africa,
layer.name = "African Countries",
col.regions = "grey",
alpha.regions = 0.3)
# COMESA in blue
m1 <- mapview(comesa_sf,
layer.name = "COMESA",
col.regions = "blue",
alpha.regions = 0.6)
# IGAD in green
m2 <- mapview(igad_sf,
layer.name = "IGAD",
col.regions = "green",
alpha.regions = 0.6)
# EAC in yellow
m3 <- mapview(eac_sf,
layer.name = "EAC",
col.regions = "yellow",
alpha.regions = 0.6)
# Combine all as toggleable layers
m0 + m1 + m2 + m3
View(africa)
#| echo: false
#| message: false
# Load required packages
library(sf)
library(leaflet)
library(rnaturalearth)
library(rnaturalearthdata)
library(dplyr)
# Load world countries
world <- ne_countries(scale = "medium", returnclass = "sf")
# Filter African countries
africa <- world[world$continent == "Africa", ]
# Define countries in each regional bloc
comesa <- c("Burundi", "Comoros", "Democratic Republic of the Congo", "Djibouti", "Egypt",
"Eritrea", "Eswatini", "Ethiopia", "Kenya", "Libya", "Madagascar", "Malawi",
"Mauritius", "Rwanda", "Seychelles", "Somalia", "Sudan", "Tunisia", "Uganda",
"Zambia", "Zimbabwe")
igad <- c("Djibouti", "Eritrea", "Ethiopia", "Kenya", "Somalia", "South Sudan", "Sudan", "Uganda")
eac <- c("Burundi", "Democratic Republic of the Congo", "Kenya", "Rwanda",
"South Sudan", "United Republic of Tanzania", "Uganda")
# Filter and label each as separate sf objects
comesa_sf <- world %>% filter(admin %in% comesa)
igad_sf   <- world %>% filter(admin %in% igad)
eac_sf    <- world %>% filter(admin %in% eac)
kenya_sf  <- world %>% filter(admin == "Kenya")
# Create the leaflet map
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
# Africa base layer in grey
addPolygons(data = africa,
group = "Africa",
color = "grey", weight = 1, fillOpacity = 0.2, label = ~admin) %>%
# COMESA in blue
addPolygons(data = comesa_sf,
group = "COMESA",
color = "blue", weight = 1, fillOpacity = 0.5, label = ~admin) %>%
# IGAD in green
addPolygons(data = igad_sf,
group = "IGAD",
color = "green", weight = 1, fillOpacity = 0.5, label = ~admin) %>%
# EAC in yellow
addPolygons(data = eac_sf,
group = "EAC",
color = "orange", weight = 1, fillOpacity = 0.5, label = ~admin) %>%
# Kenya outline for highlight
addPolygons(data = kenya_sf,
group = "Kenya",
color = "red", weight = 2, fill = FALSE, label = "Kenya") %>%
# Add layers control
addLayersControl(
overlayGroups = c("Africa", "COMESA", "IGAD", "EAC", "Kenya"),
options = layersControlOptions(collapsed = FALSE)
)
#| echo: false
#| message: false
# Load required packages
library(sf)
library(leaflet)
library(rnaturalearth)
library(rnaturalearthdata)
library(dplyr)
# Load world countries
world <- ne_countries(scale = "medium", returnclass = "sf")
# Filter African countries
africa <- world[world$continent == "Africa", ]
# Define countries in each regional bloc
comesa <- c("Burundi", "Comoros", "Democratic Republic of the Congo", "Djibouti", "Egypt",
"Eritrea", "Eswatini", "Ethiopia", "Kenya", "Libya", "Madagascar", "Malawi",
"Mauritius", "Rwanda", "Seychelles", "Somalia", "Sudan", "Tunisia", "Uganda",
"Zambia", "Zimbabwe")
igad <- c("Djibouti", "Eritrea", "Ethiopia", "Kenya", "Somalia", "South Sudan", "Sudan", "Uganda")
eac <- c("Burundi", "Democratic Republic of the Congo", "Kenya", "Rwanda",
"South Sudan", "United Republic of Tanzania", "Uganda")
# Filter and label each as separate sf objects
comesa_sf <- world %>% filter(admin %in% comesa)
igad_sf   <- world %>% filter(admin %in% igad)
eac_sf    <- world %>% filter(admin %in% eac)
kenya_sf  <- world %>% filter(admin == "Kenya")
# Create the leaflet map
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
# Africa base layer in grey
addPolygons(data = africa,
group = "Africa",
color = "grey", weight = 1, fillOpacity = 0.2, label = ~admin) %>%
# COMESA in blue
addPolygons(data = comesa_sf,
group = "COMESA",
color = "blue", weight = 1, fillOpacity = 0.5, label = ~admin) %>%
# IGAD in green
addPolygons(data = igad_sf,
group = "IGAD",
color = "green", weight = 1, fillOpacity = 0.5, label = ~admin) %>%
# EAC in yellow
addPolygons(data = eac_sf,
group = "EAC",
color = "orange", weight = 1, fillOpacity = 0.5, label = ~admin) %>%
# Kenya outline for highlight
addPolygons(data = kenya_sf,
group = "Kenya",
color = "red", weight = 2, fill = FALSE, label = "Kenya") %>%
# Add layers control
addLayersControl(
overlayGroups = c("Africa", "COMESA", "IGAD", "EAC", "Kenya"),
options = layersControlOptions(collapsed = FALSE)
) %>%
# Hide these layers by default
hideGroup(c("COMESA", "IGAD", "EAC"))
# Load required packages
library(sf)
library(leaflet)
library(rnaturalearth)
library(rnaturalearthdata)
library(dplyr)
# Load world countries
world <- ne_countries(scale = "medium", returnclass = "sf")
kenya_sf  <- world %>% filter(admin == "Kenya")
leaflet(kenya_sf) %>%
addProviderTiles("OpenTopoMap")
# Load required packages
library(sf)
library(leaflet)
library(rnaturalearth)
library(rnaturalearthdata)
library(dplyr)
# Load world countries
world <- ne_countries(scale = "medium", returnclass = "sf")
kenya_sf  <- world %>% filter(admin == "Kenya")
leaflet(kenya_sf) %>%
addProviderTiles("OpenTopoMap", group = "OpenTopoMap") %>%
addPolygons(color = "red", weight = 2, fill = FALSE, label = ~admin)
# Load required packages
library(sf)
library(leaflet)
library(rnaturalearth)
library(rnaturalearthdata)
library(dplyr)
# Load world countries
world <- ne_countries(scale = "medium", returnclass = "sf")
kenya_sf  <- world %>% filter(admin == "Kenya")
leaflet(kenya_sf) %>%
addProviderTiles("OpenTopoMap", group = "OpenTopoMap") %>%
addPolygons(color = "red", weight = 4, fill = FALSE, label = ~admin)
# Load required packages
library(sf)
library(leaflet)
library(rnaturalearth)
library(rnaturalearthdata)
library(dplyr)
# Load world countries
world <- ne_countries(scale = "medium", returnclass = "sf")
kenya_sf  <- world %>% filter(admin == "Kenya")
leaflet(kenya_sf) %>%
addProviderTiles("OpenTopoMap", group = "OpenTopoMap") %>%
addPolygons(color = "black", weight = 4, fill = FALSE, label = ~admin)
# Load world countries
world <- ne_countries(scale = "medium", returnclass = "sf")
# Filter African countries
africa <- world[world$continent == "Africa", ]
africa_sf <- africa %>%
summarise(geometry = st_union(geometry)) %>%
st_as_sf()
mapview::mapview(africa_sf)
st_centroid(africa_sf)
leaflet(africa_sf) |>
addTiles()
leaflet() |>
addTiles() |>
addPolygons(data = africa_sf)
# Your target coordinates (longitude, latitude)
lon <- 18.73076
lat <- 6.516366
leaflet() |>
addTiles() |>
addPolygons(data = africa_sf) |>
setView(lng = lon, lat = lat, zoom = 6)
leaflet() |>
addTiles() |>
addPolygons(data = africa_sf) |>
setView(lng = lon, lat = lat, zoom = 4)
leaflet() |>
addTiles() |>
addPolygons(data = africa_sf) |>
setView(lng = lon, lat = lat, zoom = 2)
leaflet() |>
addTiles() |>
addPolygons(data = africa_sf) |>
setView(lng = lon, lat = lat, zoom = 3)
#| echo: false
#| message: false
# Load required packages
library(sf)
library(leaflet)
library(rnaturalearth)
library(rnaturalearthdata)
library(dplyr)
# Load world countries
world <- ne_countries(scale = "medium", returnclass = "sf")
# Filter African countries
africa <- world[world$continent == "Africa", ]
# Define countries in each regional bloc
comesa <- c("Burundi", "Comoros", "Democratic Republic of the Congo", "Djibouti", "Egypt",
"Eritrea", "Eswatini", "Ethiopia", "Kenya", "Libya", "Madagascar", "Malawi",
"Mauritius", "Rwanda", "Seychelles", "Somalia", "Sudan", "Tunisia", "Uganda",
"Zambia", "Zimbabwe")
igad <- c("Djibouti", "Eritrea", "Ethiopia", "Kenya", "Somalia", "South Sudan", "Sudan", "Uganda")
eac <- c("Burundi", "Democratic Republic of the Congo", "Kenya", "Rwanda",
"South Sudan", "United Republic of Tanzania", "Uganda")
# Filter and label each as separate sf objects
comesa_sf <- world %>% filter(admin %in% comesa)
igad_sf   <- world %>% filter(admin %in% igad)
eac_sf    <- world %>% filter(admin %in% eac)
kenya_sf  <- world %>% filter(admin == "Kenya")
# Your target coordinates (longitude, latitude)
lon <- 18.73076
lat <- 6.516366
# Create the leaflet map
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
# Africa base layer in grey
addPolygons(data = africa,
group = "Africa",
color = "grey", weight = 1, fillOpacity = 0.2, label = ~admin) %>%
# COMESA in blue
addPolygons(data = comesa_sf,
group = "COMESA",
color = "blue", weight = 1, fillOpacity = 0.5, label = ~admin) %>%
# IGAD in green
addPolygons(data = igad_sf,
group = "IGAD",
color = "green", weight = 1, fillOpacity = 0.5, label = ~admin) %>%
# EAC in yellow
addPolygons(data = eac_sf,
group = "EAC",
color = "orange", weight = 1, fillOpacity = 0.5, label = ~admin) %>%
# Kenya outline for highlight
addPolygons(data = kenya_sf,
group = "Kenya",
color = "red", weight = 2, fill = FALSE, label = "Kenya") %>%
# Add layers control
addLayersControl(
overlayGroups = c("Africa", "COMESA", "IGAD", "EAC", "Kenya"),
options = layersControlOptions(collapsed = FALSE)
) %>%
# Hide these layers by default
hideGroup(c("COMESA", "IGAD", "EAC")) %>%
setView(lng = lon, lat = lat, zoom = 3)
#| echo: false
#| message: false
# Load required packages
library(sf)
library(leaflet)
library(rnaturalearth)
library(rnaturalearthdata)
library(dplyr)
# Load world countries
world <- ne_countries(scale = "medium", returnclass = "sf")
# Filter African countries
africa <- world[world$continent == "Africa", ]
# Define countries in each regional bloc
comesa <- c("Burundi", "Comoros", "Democratic Republic of the Congo", "Djibouti", "Egypt",
"Eritrea", "Eswatini", "Ethiopia", "Kenya", "Libya", "Madagascar", "Malawi",
"Mauritius", "Rwanda", "Seychelles", "Somalia", "Sudan", "Tunisia", "Uganda",
"Zambia", "Zimbabwe")
igad <- c("Djibouti", "Eritrea", "Ethiopia", "Kenya", "Somalia", "South Sudan", "Sudan", "Uganda")
eac <- c("Burundi", "Democratic Republic of the Congo", "Kenya", "Rwanda",
"South Sudan", "United Republic of Tanzania", "Uganda")
# Filter and label each as separate sf objects
comesa_sf <- world %>% filter(admin %in% comesa)
igad_sf   <- world %>% filter(admin %in% igad)
eac_sf    <- world %>% filter(admin %in% eac)
kenya_sf  <- world %>% filter(admin == "Kenya")
# Your target coordinates (longitude, latitude)
lon <- 18.73076
lat <- 6.516366
# Create the leaflet map
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
# Africa base layer in grey
addPolygons(data = africa,
group = "Africa",
color = "grey", weight = 1, fillOpacity = 0.2, label = ~admin) %>%
# COMESA in blue
addPolygons(data = comesa_sf,
group = "COMESA",
color = "blue", weight = 1, fillOpacity = 0.5, label = ~admin) %>%
# IGAD in green
addPolygons(data = igad_sf,
group = "IGAD",
color = "green", weight = 1, fillOpacity = 0.5, label = ~admin) %>%
# EAC in yellow
addPolygons(data = eac_sf,
group = "EAC",
color = "orange", weight = 1, fillOpacity = 0.5, label = ~admin) %>%
# Kenya outline for highlight
addPolygons(data = kenya_sf,
group = "Kenya",
color = "red", weight = 2, fill = FALSE, label = "Kenya") %>%
# Add layers control
addLayersControl(
overlayGroups = c("Africa", "Kenya", "COMESA", "IGAD", "EAC"),
options = layersControlOptions(collapsed = FALSE)
) %>%
# Hide these layers by default
hideGroup(c("COMESA", "IGAD", "EAC")) %>%
setView(lng = lon, lat = lat, zoom = 3)
#| echo: false
#| message: false
# Load required packages
library(sf)
library(leaflet)
library(rnaturalearth)
library(rnaturalearthdata)
library(dplyr)
# Load world countries
world <- ne_countries(scale = "medium", returnclass = "sf")
# Filter African countries
africa <- world[world$continent == "Africa", ]
# Define countries in each regional bloc
comesa <- c("Burundi", "Comoros", "Democratic Republic of the Congo", "Djibouti", "Egypt",
"Eritrea", "Eswatini", "Ethiopia", "Kenya", "Libya", "Madagascar", "Malawi",
"Mauritius", "Rwanda", "Seychelles", "Somalia", "Sudan", "Tunisia", "Uganda",
"Zambia", "Zimbabwe")
igad <- c("Djibouti", "Eritrea", "Ethiopia", "Kenya", "Somalia", "South Sudan", "Sudan", "Uganda")
eac <- c("Burundi", "Democratic Republic of the Congo", "Kenya", "Rwanda",
"South Sudan", "United Republic of Tanzania", "Uganda")
# Filter and label each as separate sf objects
comesa_sf <- world %>% filter(admin %in% comesa)
igad_sf   <- world %>% filter(admin %in% igad)
eac_sf    <- world %>% filter(admin %in% eac)
kenya_sf  <- world %>% filter(admin == "Kenya")
# Your target coordinates (longitude, latitude)
lon <- 18.73076
lat <- 6.516366
# Create the leaflet map
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
# Africa base layer in grey
addPolygons(data = africa,
group = "Africa",
color = "grey", weight = 1, fillOpacity = 0.2, label = ~admin) %>%
# COMESA in blue
addPolygons(data = comesa_sf,
group = "COMESA",
color = "blue", weight = 1, fillOpacity = 0.5, label = ~admin) %>%
# IGAD in green
addPolygons(data = igad_sf,
group = "IGAD",
color = "green", weight = 1, fillOpacity = 0.5, label = ~admin) %>%
# EAC in yellow
addPolygons(data = eac_sf,
group = "EAC",
color = "orange", weight = 1, fillOpacity = 0.5, label = ~admin) %>%
# Kenya outline for highlight
addPolygons(data = kenya_sf,
group = "Kenya",
color = "red", weight = 2, fillOpacity = 0.7, label = "Kenya") %>%
# Add layers control
addLayersControl(
overlayGroups = c("Africa", "Kenya", "COMESA", "IGAD", "EAC"),
options = layersControlOptions(collapsed = FALSE)
) %>%
# Hide these layers by default
hideGroup(c("COMESA", "IGAD", "EAC")) %>%
setView(lng = lon, lat = lat, zoom = 3)
Kenyaste <- rKenyaCensus::KenyaCounties_SHP %>%
st_as_sf() %>%
st_transform(, crs = 4326)%>%
st_make_valid()
library(leaflet)
library(rnaturalearth)
library(rnaturalearthdata)
library(dplyr)
library(rKenyaCensus)
Kenyaste <- rKenyaCensus::KenyaCounties_SHP %>%
st_as_sf() %>%
st_transform(, crs = 4326)%>%
st_make_valid()
library(sf)
library(leaflet)
library(rnaturalearth)
library(rnaturalearthdata)
library(dplyr)
library(rKenyaCensus)
Kenyaste <- rKenyaCensus::KenyaCounties_SHP %>%
st_as_sf() %>%
st_transform(, crs = 4326)%>%
st_make_valid()
Kenyaste
#| echo: false
#| message: false
#| fig.cap: "Topography Map"
# Load required packages
library(sf)
library(leaflet)
library(rnaturalearth)
library(rnaturalearthdata)
library(dplyr)
library(rKenyaCensus)
Kenyaste <- rKenyaCensus::KenyaCounties_SHP %>%
st_as_sf() %>%
st_transform(, crs = 4326)%>%
st_make_valid()
# Load world countries
world <- ne_countries(scale = "medium", returnclass = "sf")
kenya_sf  <- world %>% filter(admin == "Kenya")
leaflet() %>%
addProviderTiles("OpenTopoMap", group = "OpenTopoMap") %>%
addPolygons(data = kenya_sf, color = "black", weight = 4, fill = FALSE, label = ~admin) %>%
addPolygons(data = Kenyaste, color = "black", weight = 2, fill = FALSE, label = ~County)
#| echo: false
#| message: false
#| fig.cap: "Topography Map"
# Load required packages
library(sf)
library(leaflet)
library(rnaturalearth)
library(rnaturalearthdata)
library(dplyr)
library(rKenyaCensus)
Kenyaste <- rKenyaCensus::KenyaCounties_SHP %>%
st_as_sf() %>%
st_transform(, crs = 4326)%>%
st_make_valid()
# Load world countries
world <- ne_countries(scale = "medium", returnclass = "sf")
kenya_sf  <- world %>% filter(admin == "Kenya")
leaflet() %>%
addProviderTiles("OpenTopoMap", group = "OpenTopoMap") %>%
addPolygons(data = kenya_sf, color = "black", weight = 4, fill = FALSE, label = ~admin) %>%
addPolygons(data = Kenyaste, color = "grey", weight = 2, fill = FALSE, label = ~County)
quarto render
